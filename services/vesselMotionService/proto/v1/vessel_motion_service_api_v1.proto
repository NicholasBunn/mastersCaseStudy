syntax = "proto3";

option csharp_namespace = "vesselMotionService";

package vesselMotionService.v1;

option go_package = "routeAnalysisAggregator/proto/v1/generated/vesselMotionService;vesselMotionService";


message MotionEstimateRequest {
    repeated float port_prop_motor_power = 1;
    repeated float wind_speed_relative = 2;
    repeated float latitude = 3;
    repeated float heading = 4;
    repeated float wave_height = 5;
    LocationOnShipEnum query_location = 6;
    repeated float wind_direction_relative = 7;
    ModelTypeEnum model_type = 8;
}

message MotionTrackingRequest {

}

message MotionEstimateResponse {
    // All accelerations returned in this message are provided in m/s^2
    repeated double acceleration_estimate_x = 1; 
    repeated double acceleration_estimate_y = 2;
    repeated double acceleration_estimate_z = 3;
}

message MotionTrackingResponse {
    repeated double acceleration_actual = 1;
}

message MotionEvaluationResponse {
    repeated double acceleration_estimate = 1;
    repeated double acceleration_actual = 2;
}

// 'Vessel Motion Service; offers three service calls that provide information about the vessel's motion in response to her sailing conditions (mainly regarding the high frequency component of the vessel's acceleration/vibration)
service vesselMotionService {
    // The 'Motion Estimate' call provides foresight for tactical decision-making by providing high-frequency acceleration estimates for a requested sailing conditions at a requested location on the ship
    rpc MotionEstimate(MotionEstimateRequest) returns (MotionEstimateResponse);
    // The 'Motion Tracking' call provides insight for tactical decision-making by providing real-time, high-frequency acceleration readings for a requested location on the ship
    rpc MotionTracking(MotionTrackingRequest) returns (MotionTrackingResponse);
    // The 'Motion Estimation Evaluation' call provides hindsight for strategic decision-making by evaluating the accuracy of the models predictions
    rpc MotionEstimateEvaluation(MotionEstimateRequest) returns (MotionEvaluationResponse);
}

enum LocationOnShipEnum {
    UNKNOWN_LOCATION = 0;
    SOMEWHERE = 1;
}

enum ModelTypeEnum {
    UNKNOWN_MODEL = 0;
    OPENWATER = 1;
    ICE = 2;
}




