syntax = "proto3";

package processVibrationServiceAPI.v1;

message ProcessRequest {
    repeated double unix_time = 1;
    repeated float vibration_x = 2;
    repeated float vibration_y = 3;
    repeated float vibration_z = 4;
}

message ProcessResponseSeries {
    repeated double unix_time = 1;
    repeated float rms_vibration_x = 2;
    repeated float rms_vibration_y = 3;
    repeated float rms_vibration_z = 4;
}

message ProcessResponseBatch {
    double unix_time_start = 1;
    double unix_time_end = 2;
    float rms_vibration_x = 3;
    float rms_vibration_y = 4;
    float rms_vibration_z = 5;
}

// 'Process Vibration Service' offers two service calls that process time-series vibration signals according to accepted practices.
service ProcessVibrationService {
    // The 'Calculate RMS Series' call calculates the root mean square (RMS) vibration for individual time-series vibration signals.
    rpc CalculateRMSSeries(ProcessRequest) returns (ProcessResponseSeries);
    // The 'Calculate RMS Batch' call calculates the root mean square (RMS) vibration for an "ensemble" value of a vibration signal time-series.
    rpc CalculateRMSBatch(ProcessRequest) returns (ProcessResponseBatch);
}