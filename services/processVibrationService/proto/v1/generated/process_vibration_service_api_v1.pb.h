// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: process_vibration_service_api_v1.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_process_5fvibration_5fservice_5fapi_5fv1_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_process_5fvibration_5fservice_5fapi_5fv1_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3015000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3015008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_process_5fvibration_5fservice_5fapi_5fv1_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_process_5fvibration_5fservice_5fapi_5fv1_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_process_5fvibration_5fservice_5fapi_5fv1_2eproto;
::PROTOBUF_NAMESPACE_ID::Metadata descriptor_table_process_5fvibration_5fservice_5fapi_5fv1_2eproto_metadata_getter(int index);
namespace processVibrationServiceAPI {
namespace v1 {
class ProcessRequest;
struct ProcessRequestDefaultTypeInternal;
extern ProcessRequestDefaultTypeInternal _ProcessRequest_default_instance_;
class ProcessResponse;
struct ProcessResponseDefaultTypeInternal;
extern ProcessResponseDefaultTypeInternal _ProcessResponse_default_instance_;
}  // namespace v1
}  // namespace processVibrationServiceAPI
PROTOBUF_NAMESPACE_OPEN
template<> ::processVibrationServiceAPI::v1::ProcessRequest* Arena::CreateMaybeMessage<::processVibrationServiceAPI::v1::ProcessRequest>(Arena*);
template<> ::processVibrationServiceAPI::v1::ProcessResponse* Arena::CreateMaybeMessage<::processVibrationServiceAPI::v1::ProcessResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace processVibrationServiceAPI {
namespace v1 {

// ===================================================================

class ProcessRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:processVibrationServiceAPI.v1.ProcessRequest) */ {
 public:
  inline ProcessRequest() : ProcessRequest(nullptr) {}
  virtual ~ProcessRequest();
  explicit constexpr ProcessRequest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProcessRequest(const ProcessRequest& from);
  ProcessRequest(ProcessRequest&& from) noexcept
    : ProcessRequest() {
    *this = ::std::move(from);
  }

  inline ProcessRequest& operator=(const ProcessRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessRequest& operator=(ProcessRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcessRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProcessRequest* internal_default_instance() {
    return reinterpret_cast<const ProcessRequest*>(
               &_ProcessRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ProcessRequest& a, ProcessRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessRequest* New() const final {
    return CreateMaybeMessage<ProcessRequest>(nullptr);
  }

  ProcessRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcessRequest& from);
  void MergeFrom(const ProcessRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcessRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "processVibrationServiceAPI.v1.ProcessRequest";
  }
  protected:
  explicit ProcessRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_process_5fvibration_5fservice_5fapi_5fv1_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnixTimeFieldNumber = 1,
    kVibrationXFieldNumber = 2,
    kVibrationYFieldNumber = 3,
    kVibrationZFieldNumber = 4,
  };
  // repeated double unix_time = 1;
  int unix_time_size() const;
  private:
  int _internal_unix_time_size() const;
  public:
  void clear_unix_time();
  private:
  double _internal_unix_time(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_unix_time() const;
  void _internal_add_unix_time(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_unix_time();
  public:
  double unix_time(int index) const;
  void set_unix_time(int index, double value);
  void add_unix_time(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      unix_time() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_unix_time();

  // repeated float vibration_x = 2;
  int vibration_x_size() const;
  private:
  int _internal_vibration_x_size() const;
  public:
  void clear_vibration_x();
  private:
  float _internal_vibration_x(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vibration_x() const;
  void _internal_add_vibration_x(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vibration_x();
  public:
  float vibration_x(int index) const;
  void set_vibration_x(int index, float value);
  void add_vibration_x(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vibration_x() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vibration_x();

  // repeated float vibration_y = 3;
  int vibration_y_size() const;
  private:
  int _internal_vibration_y_size() const;
  public:
  void clear_vibration_y();
  private:
  float _internal_vibration_y(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vibration_y() const;
  void _internal_add_vibration_y(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vibration_y();
  public:
  float vibration_y(int index) const;
  void set_vibration_y(int index, float value);
  void add_vibration_y(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vibration_y() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vibration_y();

  // repeated float vibration_z = 4;
  int vibration_z_size() const;
  private:
  int _internal_vibration_z_size() const;
  public:
  void clear_vibration_z();
  private:
  float _internal_vibration_z(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vibration_z() const;
  void _internal_add_vibration_z(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vibration_z();
  public:
  float vibration_z(int index) const;
  void set_vibration_z(int index, float value);
  void add_vibration_z(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vibration_z() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vibration_z();

  // @@protoc_insertion_point(class_scope:processVibrationServiceAPI.v1.ProcessRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > unix_time_;
  mutable std::atomic<int> _unix_time_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vibration_x_;
  mutable std::atomic<int> _vibration_x_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vibration_y_;
  mutable std::atomic<int> _vibration_y_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vibration_z_;
  mutable std::atomic<int> _vibration_z_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_process_5fvibration_5fservice_5fapi_5fv1_2eproto;
};
// -------------------------------------------------------------------

class ProcessResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:processVibrationServiceAPI.v1.ProcessResponse) */ {
 public:
  inline ProcessResponse() : ProcessResponse(nullptr) {}
  virtual ~ProcessResponse();
  explicit constexpr ProcessResponse(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ProcessResponse(const ProcessResponse& from);
  ProcessResponse(ProcessResponse&& from) noexcept
    : ProcessResponse() {
    *this = ::std::move(from);
  }

  inline ProcessResponse& operator=(const ProcessResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessResponse& operator=(ProcessResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ProcessResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProcessResponse* internal_default_instance() {
    return reinterpret_cast<const ProcessResponse*>(
               &_ProcessResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ProcessResponse& a, ProcessResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ProcessResponse* New() const final {
    return CreateMaybeMessage<ProcessResponse>(nullptr);
  }

  ProcessResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ProcessResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ProcessResponse& from);
  void MergeFrom(const ProcessResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ProcessResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "processVibrationServiceAPI.v1.ProcessResponse";
  }
  protected:
  explicit ProcessResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    return ::descriptor_table_process_5fvibration_5fservice_5fapi_5fv1_2eproto_metadata_getter(kIndexInFileMessages);
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnixTimeFieldNumber = 1,
    kRmsVibrationXFieldNumber = 2,
    kRmsVibrationYFieldNumber = 3,
    kRmsVibrationZFieldNumber = 4,
    kVDVVibrationXFieldNumber = 5,
    kVDVVibrationYFieldNumber = 6,
    kVDVVibrationZFieldNumber = 7,
  };
  // repeated double unix_time = 1;
  int unix_time_size() const;
  private:
  int _internal_unix_time_size() const;
  public:
  void clear_unix_time();
  private:
  double _internal_unix_time(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_unix_time() const;
  void _internal_add_unix_time(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_unix_time();
  public:
  double unix_time(int index) const;
  void set_unix_time(int index, double value);
  void add_unix_time(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      unix_time() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_unix_time();

  // repeated float rms_vibration_x = 2;
  int rms_vibration_x_size() const;
  private:
  int _internal_rms_vibration_x_size() const;
  public:
  void clear_rms_vibration_x();
  private:
  float _internal_rms_vibration_x(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_rms_vibration_x() const;
  void _internal_add_rms_vibration_x(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_rms_vibration_x();
  public:
  float rms_vibration_x(int index) const;
  void set_rms_vibration_x(int index, float value);
  void add_rms_vibration_x(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      rms_vibration_x() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_rms_vibration_x();

  // repeated float rms_vibration_y = 3;
  int rms_vibration_y_size() const;
  private:
  int _internal_rms_vibration_y_size() const;
  public:
  void clear_rms_vibration_y();
  private:
  float _internal_rms_vibration_y(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_rms_vibration_y() const;
  void _internal_add_rms_vibration_y(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_rms_vibration_y();
  public:
  float rms_vibration_y(int index) const;
  void set_rms_vibration_y(int index, float value);
  void add_rms_vibration_y(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      rms_vibration_y() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_rms_vibration_y();

  // repeated float rms_vibration_z = 4;
  int rms_vibration_z_size() const;
  private:
  int _internal_rms_vibration_z_size() const;
  public:
  void clear_rms_vibration_z();
  private:
  float _internal_rms_vibration_z(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_rms_vibration_z() const;
  void _internal_add_rms_vibration_z(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_rms_vibration_z();
  public:
  float rms_vibration_z(int index) const;
  void set_rms_vibration_z(int index, float value);
  void add_rms_vibration_z(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      rms_vibration_z() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_rms_vibration_z();

  // repeated float VDV_vibration_x = 5;
  int vdv_vibration_x_size() const;
  private:
  int _internal_vdv_vibration_x_size() const;
  public:
  void clear_vdv_vibration_x();
  private:
  float _internal_vdv_vibration_x(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vdv_vibration_x() const;
  void _internal_add_vdv_vibration_x(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vdv_vibration_x();
  public:
  float vdv_vibration_x(int index) const;
  void set_vdv_vibration_x(int index, float value);
  void add_vdv_vibration_x(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vdv_vibration_x() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vdv_vibration_x();

  // repeated float VDV_vibration_y = 6;
  int vdv_vibration_y_size() const;
  private:
  int _internal_vdv_vibration_y_size() const;
  public:
  void clear_vdv_vibration_y();
  private:
  float _internal_vdv_vibration_y(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vdv_vibration_y() const;
  void _internal_add_vdv_vibration_y(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vdv_vibration_y();
  public:
  float vdv_vibration_y(int index) const;
  void set_vdv_vibration_y(int index, float value);
  void add_vdv_vibration_y(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vdv_vibration_y() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vdv_vibration_y();

  // repeated float VDV_vibration_z = 7;
  int vdv_vibration_z_size() const;
  private:
  int _internal_vdv_vibration_z_size() const;
  public:
  void clear_vdv_vibration_z();
  private:
  float _internal_vdv_vibration_z(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_vdv_vibration_z() const;
  void _internal_add_vdv_vibration_z(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_vdv_vibration_z();
  public:
  float vdv_vibration_z(int index) const;
  void set_vdv_vibration_z(int index, float value);
  void add_vdv_vibration_z(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      vdv_vibration_z() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_vdv_vibration_z();

  // @@protoc_insertion_point(class_scope:processVibrationServiceAPI.v1.ProcessResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > unix_time_;
  mutable std::atomic<int> _unix_time_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > rms_vibration_x_;
  mutable std::atomic<int> _rms_vibration_x_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > rms_vibration_y_;
  mutable std::atomic<int> _rms_vibration_y_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > rms_vibration_z_;
  mutable std::atomic<int> _rms_vibration_z_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vdv_vibration_x_;
  mutable std::atomic<int> _vdv_vibration_x_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vdv_vibration_y_;
  mutable std::atomic<int> _vdv_vibration_y_cached_byte_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > vdv_vibration_z_;
  mutable std::atomic<int> _vdv_vibration_z_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_process_5fvibration_5fservice_5fapi_5fv1_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProcessRequest

// repeated double unix_time = 1;
inline int ProcessRequest::_internal_unix_time_size() const {
  return unix_time_.size();
}
inline int ProcessRequest::unix_time_size() const {
  return _internal_unix_time_size();
}
inline void ProcessRequest::clear_unix_time() {
  unix_time_.Clear();
}
inline double ProcessRequest::_internal_unix_time(int index) const {
  return unix_time_.Get(index);
}
inline double ProcessRequest::unix_time(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessRequest.unix_time)
  return _internal_unix_time(index);
}
inline void ProcessRequest::set_unix_time(int index, double value) {
  unix_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessRequest.unix_time)
}
inline void ProcessRequest::_internal_add_unix_time(double value) {
  unix_time_.Add(value);
}
inline void ProcessRequest::add_unix_time(double value) {
  _internal_add_unix_time(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessRequest.unix_time)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProcessRequest::_internal_unix_time() const {
  return unix_time_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProcessRequest::unix_time() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessRequest.unix_time)
  return _internal_unix_time();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProcessRequest::_internal_mutable_unix_time() {
  return &unix_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProcessRequest::mutable_unix_time() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessRequest.unix_time)
  return _internal_mutable_unix_time();
}

// repeated float vibration_x = 2;
inline int ProcessRequest::_internal_vibration_x_size() const {
  return vibration_x_.size();
}
inline int ProcessRequest::vibration_x_size() const {
  return _internal_vibration_x_size();
}
inline void ProcessRequest::clear_vibration_x() {
  vibration_x_.Clear();
}
inline float ProcessRequest::_internal_vibration_x(int index) const {
  return vibration_x_.Get(index);
}
inline float ProcessRequest::vibration_x(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessRequest.vibration_x)
  return _internal_vibration_x(index);
}
inline void ProcessRequest::set_vibration_x(int index, float value) {
  vibration_x_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessRequest.vibration_x)
}
inline void ProcessRequest::_internal_add_vibration_x(float value) {
  vibration_x_.Add(value);
}
inline void ProcessRequest::add_vibration_x(float value) {
  _internal_add_vibration_x(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessRequest.vibration_x)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessRequest::_internal_vibration_x() const {
  return vibration_x_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessRequest::vibration_x() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessRequest.vibration_x)
  return _internal_vibration_x();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessRequest::_internal_mutable_vibration_x() {
  return &vibration_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessRequest::mutable_vibration_x() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessRequest.vibration_x)
  return _internal_mutable_vibration_x();
}

// repeated float vibration_y = 3;
inline int ProcessRequest::_internal_vibration_y_size() const {
  return vibration_y_.size();
}
inline int ProcessRequest::vibration_y_size() const {
  return _internal_vibration_y_size();
}
inline void ProcessRequest::clear_vibration_y() {
  vibration_y_.Clear();
}
inline float ProcessRequest::_internal_vibration_y(int index) const {
  return vibration_y_.Get(index);
}
inline float ProcessRequest::vibration_y(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessRequest.vibration_y)
  return _internal_vibration_y(index);
}
inline void ProcessRequest::set_vibration_y(int index, float value) {
  vibration_y_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessRequest.vibration_y)
}
inline void ProcessRequest::_internal_add_vibration_y(float value) {
  vibration_y_.Add(value);
}
inline void ProcessRequest::add_vibration_y(float value) {
  _internal_add_vibration_y(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessRequest.vibration_y)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessRequest::_internal_vibration_y() const {
  return vibration_y_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessRequest::vibration_y() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessRequest.vibration_y)
  return _internal_vibration_y();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessRequest::_internal_mutable_vibration_y() {
  return &vibration_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessRequest::mutable_vibration_y() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessRequest.vibration_y)
  return _internal_mutable_vibration_y();
}

// repeated float vibration_z = 4;
inline int ProcessRequest::_internal_vibration_z_size() const {
  return vibration_z_.size();
}
inline int ProcessRequest::vibration_z_size() const {
  return _internal_vibration_z_size();
}
inline void ProcessRequest::clear_vibration_z() {
  vibration_z_.Clear();
}
inline float ProcessRequest::_internal_vibration_z(int index) const {
  return vibration_z_.Get(index);
}
inline float ProcessRequest::vibration_z(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessRequest.vibration_z)
  return _internal_vibration_z(index);
}
inline void ProcessRequest::set_vibration_z(int index, float value) {
  vibration_z_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessRequest.vibration_z)
}
inline void ProcessRequest::_internal_add_vibration_z(float value) {
  vibration_z_.Add(value);
}
inline void ProcessRequest::add_vibration_z(float value) {
  _internal_add_vibration_z(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessRequest.vibration_z)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessRequest::_internal_vibration_z() const {
  return vibration_z_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessRequest::vibration_z() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessRequest.vibration_z)
  return _internal_vibration_z();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessRequest::_internal_mutable_vibration_z() {
  return &vibration_z_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessRequest::mutable_vibration_z() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessRequest.vibration_z)
  return _internal_mutable_vibration_z();
}

// -------------------------------------------------------------------

// ProcessResponse

// repeated double unix_time = 1;
inline int ProcessResponse::_internal_unix_time_size() const {
  return unix_time_.size();
}
inline int ProcessResponse::unix_time_size() const {
  return _internal_unix_time_size();
}
inline void ProcessResponse::clear_unix_time() {
  unix_time_.Clear();
}
inline double ProcessResponse::_internal_unix_time(int index) const {
  return unix_time_.Get(index);
}
inline double ProcessResponse::unix_time(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessResponse.unix_time)
  return _internal_unix_time(index);
}
inline void ProcessResponse::set_unix_time(int index, double value) {
  unix_time_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessResponse.unix_time)
}
inline void ProcessResponse::_internal_add_unix_time(double value) {
  unix_time_.Add(value);
}
inline void ProcessResponse::add_unix_time(double value) {
  _internal_add_unix_time(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessResponse.unix_time)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProcessResponse::_internal_unix_time() const {
  return unix_time_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
ProcessResponse::unix_time() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessResponse.unix_time)
  return _internal_unix_time();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProcessResponse::_internal_mutable_unix_time() {
  return &unix_time_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
ProcessResponse::mutable_unix_time() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessResponse.unix_time)
  return _internal_mutable_unix_time();
}

// repeated float rms_vibration_x = 2;
inline int ProcessResponse::_internal_rms_vibration_x_size() const {
  return rms_vibration_x_.size();
}
inline int ProcessResponse::rms_vibration_x_size() const {
  return _internal_rms_vibration_x_size();
}
inline void ProcessResponse::clear_rms_vibration_x() {
  rms_vibration_x_.Clear();
}
inline float ProcessResponse::_internal_rms_vibration_x(int index) const {
  return rms_vibration_x_.Get(index);
}
inline float ProcessResponse::rms_vibration_x(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_x)
  return _internal_rms_vibration_x(index);
}
inline void ProcessResponse::set_rms_vibration_x(int index, float value) {
  rms_vibration_x_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_x)
}
inline void ProcessResponse::_internal_add_rms_vibration_x(float value) {
  rms_vibration_x_.Add(value);
}
inline void ProcessResponse::add_rms_vibration_x(float value) {
  _internal_add_rms_vibration_x(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_x)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::_internal_rms_vibration_x() const {
  return rms_vibration_x_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::rms_vibration_x() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_x)
  return _internal_rms_vibration_x();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::_internal_mutable_rms_vibration_x() {
  return &rms_vibration_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::mutable_rms_vibration_x() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_x)
  return _internal_mutable_rms_vibration_x();
}

// repeated float rms_vibration_y = 3;
inline int ProcessResponse::_internal_rms_vibration_y_size() const {
  return rms_vibration_y_.size();
}
inline int ProcessResponse::rms_vibration_y_size() const {
  return _internal_rms_vibration_y_size();
}
inline void ProcessResponse::clear_rms_vibration_y() {
  rms_vibration_y_.Clear();
}
inline float ProcessResponse::_internal_rms_vibration_y(int index) const {
  return rms_vibration_y_.Get(index);
}
inline float ProcessResponse::rms_vibration_y(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_y)
  return _internal_rms_vibration_y(index);
}
inline void ProcessResponse::set_rms_vibration_y(int index, float value) {
  rms_vibration_y_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_y)
}
inline void ProcessResponse::_internal_add_rms_vibration_y(float value) {
  rms_vibration_y_.Add(value);
}
inline void ProcessResponse::add_rms_vibration_y(float value) {
  _internal_add_rms_vibration_y(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_y)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::_internal_rms_vibration_y() const {
  return rms_vibration_y_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::rms_vibration_y() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_y)
  return _internal_rms_vibration_y();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::_internal_mutable_rms_vibration_y() {
  return &rms_vibration_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::mutable_rms_vibration_y() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_y)
  return _internal_mutable_rms_vibration_y();
}

// repeated float rms_vibration_z = 4;
inline int ProcessResponse::_internal_rms_vibration_z_size() const {
  return rms_vibration_z_.size();
}
inline int ProcessResponse::rms_vibration_z_size() const {
  return _internal_rms_vibration_z_size();
}
inline void ProcessResponse::clear_rms_vibration_z() {
  rms_vibration_z_.Clear();
}
inline float ProcessResponse::_internal_rms_vibration_z(int index) const {
  return rms_vibration_z_.Get(index);
}
inline float ProcessResponse::rms_vibration_z(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_z)
  return _internal_rms_vibration_z(index);
}
inline void ProcessResponse::set_rms_vibration_z(int index, float value) {
  rms_vibration_z_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_z)
}
inline void ProcessResponse::_internal_add_rms_vibration_z(float value) {
  rms_vibration_z_.Add(value);
}
inline void ProcessResponse::add_rms_vibration_z(float value) {
  _internal_add_rms_vibration_z(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_z)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::_internal_rms_vibration_z() const {
  return rms_vibration_z_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::rms_vibration_z() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_z)
  return _internal_rms_vibration_z();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::_internal_mutable_rms_vibration_z() {
  return &rms_vibration_z_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::mutable_rms_vibration_z() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessResponse.rms_vibration_z)
  return _internal_mutable_rms_vibration_z();
}

// repeated float VDV_vibration_x = 5;
inline int ProcessResponse::_internal_vdv_vibration_x_size() const {
  return vdv_vibration_x_.size();
}
inline int ProcessResponse::vdv_vibration_x_size() const {
  return _internal_vdv_vibration_x_size();
}
inline void ProcessResponse::clear_vdv_vibration_x() {
  vdv_vibration_x_.Clear();
}
inline float ProcessResponse::_internal_vdv_vibration_x(int index) const {
  return vdv_vibration_x_.Get(index);
}
inline float ProcessResponse::vdv_vibration_x(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_x)
  return _internal_vdv_vibration_x(index);
}
inline void ProcessResponse::set_vdv_vibration_x(int index, float value) {
  vdv_vibration_x_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_x)
}
inline void ProcessResponse::_internal_add_vdv_vibration_x(float value) {
  vdv_vibration_x_.Add(value);
}
inline void ProcessResponse::add_vdv_vibration_x(float value) {
  _internal_add_vdv_vibration_x(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_x)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::_internal_vdv_vibration_x() const {
  return vdv_vibration_x_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::vdv_vibration_x() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_x)
  return _internal_vdv_vibration_x();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::_internal_mutable_vdv_vibration_x() {
  return &vdv_vibration_x_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::mutable_vdv_vibration_x() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_x)
  return _internal_mutable_vdv_vibration_x();
}

// repeated float VDV_vibration_y = 6;
inline int ProcessResponse::_internal_vdv_vibration_y_size() const {
  return vdv_vibration_y_.size();
}
inline int ProcessResponse::vdv_vibration_y_size() const {
  return _internal_vdv_vibration_y_size();
}
inline void ProcessResponse::clear_vdv_vibration_y() {
  vdv_vibration_y_.Clear();
}
inline float ProcessResponse::_internal_vdv_vibration_y(int index) const {
  return vdv_vibration_y_.Get(index);
}
inline float ProcessResponse::vdv_vibration_y(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_y)
  return _internal_vdv_vibration_y(index);
}
inline void ProcessResponse::set_vdv_vibration_y(int index, float value) {
  vdv_vibration_y_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_y)
}
inline void ProcessResponse::_internal_add_vdv_vibration_y(float value) {
  vdv_vibration_y_.Add(value);
}
inline void ProcessResponse::add_vdv_vibration_y(float value) {
  _internal_add_vdv_vibration_y(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_y)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::_internal_vdv_vibration_y() const {
  return vdv_vibration_y_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::vdv_vibration_y() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_y)
  return _internal_vdv_vibration_y();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::_internal_mutable_vdv_vibration_y() {
  return &vdv_vibration_y_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::mutable_vdv_vibration_y() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_y)
  return _internal_mutable_vdv_vibration_y();
}

// repeated float VDV_vibration_z = 7;
inline int ProcessResponse::_internal_vdv_vibration_z_size() const {
  return vdv_vibration_z_.size();
}
inline int ProcessResponse::vdv_vibration_z_size() const {
  return _internal_vdv_vibration_z_size();
}
inline void ProcessResponse::clear_vdv_vibration_z() {
  vdv_vibration_z_.Clear();
}
inline float ProcessResponse::_internal_vdv_vibration_z(int index) const {
  return vdv_vibration_z_.Get(index);
}
inline float ProcessResponse::vdv_vibration_z(int index) const {
  // @@protoc_insertion_point(field_get:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_z)
  return _internal_vdv_vibration_z(index);
}
inline void ProcessResponse::set_vdv_vibration_z(int index, float value) {
  vdv_vibration_z_.Set(index, value);
  // @@protoc_insertion_point(field_set:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_z)
}
inline void ProcessResponse::_internal_add_vdv_vibration_z(float value) {
  vdv_vibration_z_.Add(value);
}
inline void ProcessResponse::add_vdv_vibration_z(float value) {
  _internal_add_vdv_vibration_z(value);
  // @@protoc_insertion_point(field_add:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_z)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::_internal_vdv_vibration_z() const {
  return vdv_vibration_z_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
ProcessResponse::vdv_vibration_z() const {
  // @@protoc_insertion_point(field_list:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_z)
  return _internal_vdv_vibration_z();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::_internal_mutable_vdv_vibration_z() {
  return &vdv_vibration_z_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
ProcessResponse::mutable_vdv_vibration_z() {
  // @@protoc_insertion_point(field_mutable_list:processVibrationServiceAPI.v1.ProcessResponse.VDV_vibration_z)
  return _internal_mutable_vdv_vibration_z();
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace v1
}  // namespace processVibrationServiceAPI

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_process_5fvibration_5fservice_5fapi_5fv1_2eproto
