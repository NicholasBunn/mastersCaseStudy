syntax = "proto3";

package comfortServiceAPI.v1;

option go_package = "routeAnalysisAggregator/proto/v1/generated/comfortService;routeAnalysisAggregator";

message ComfortRequest {
    repeated double unix_time = 1;
    repeated double human_weighted_vibration_x = 2;
    repeated double human_weighted_vibration_y = 3;
    repeated double human_weighted_vibration_z = 4;
}

message ComfortResponse {
    repeated double unix_time = 1;
    HabitibilityRating rating = 2;
    // optional string percentage_max_rating = 3;
}

// 'Comfort Service' offers one service call that provides information about human comfort onboard, in response to vessel vibrations.
service ComfortService {
    // The 'Comfort Rating' call provides foresight for tactical decision-making by providing a comfort rating for a proposed route, based on estimated vibrations on board.
    rpc ComfortRating(ComfortRequest) returns (ComfortResponse);
}

enum HabitibilityRating {
    UNKNOWN_RATING = 0;
    NOT_UNCOMFORTABLE = 1;
    SLIGHTLY_UNCOMFORTABLE = 2;
    FAIRLY_UNCOMFORTABLE = 3;
    UNCOMFORTABLE = 4;
    VERY_UNCOMFORTABLE = 5;
    EXTREMELY_UNCOMFORTABLE = 6;
}