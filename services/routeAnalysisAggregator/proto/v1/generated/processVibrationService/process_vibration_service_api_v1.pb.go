// Code generated by protoc-gen-go. DO NOT EDIT.
// source: processVibrationService/proto/v1/process_vibration_service_api_v1.proto

package routeAnalysisAggregator

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ProcessRequest struct {
	UnixTime             []float64 `protobuf:"fixed64,1,rep,packed,name=unix_time,json=unixTime,proto3" json:"unix_time,omitempty"`
	VibrationX           []float64 `protobuf:"fixed64,2,rep,packed,name=vibration_x,json=vibrationX,proto3" json:"vibration_x,omitempty"`
	VibrationY           []float64 `protobuf:"fixed64,3,rep,packed,name=vibration_y,json=vibrationY,proto3" json:"vibration_y,omitempty"`
	VibrationZ           []float64 `protobuf:"fixed64,4,rep,packed,name=vibration_z,json=vibrationZ,proto3" json:"vibration_z,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProcessRequest) Reset()         { *m = ProcessRequest{} }
func (m *ProcessRequest) String() string { return proto.CompactTextString(m) }
func (*ProcessRequest) ProtoMessage()    {}
func (*ProcessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c22b8d8c4cd16b, []int{0}
}

func (m *ProcessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessRequest.Unmarshal(m, b)
}
func (m *ProcessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessRequest.Marshal(b, m, deterministic)
}
func (m *ProcessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessRequest.Merge(m, src)
}
func (m *ProcessRequest) XXX_Size() int {
	return xxx_messageInfo_ProcessRequest.Size(m)
}
func (m *ProcessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessRequest proto.InternalMessageInfo

func (m *ProcessRequest) GetUnixTime() []float64 {
	if m != nil {
		return m.UnixTime
	}
	return nil
}

func (m *ProcessRequest) GetVibrationX() []float64 {
	if m != nil {
		return m.VibrationX
	}
	return nil
}

func (m *ProcessRequest) GetVibrationY() []float64 {
	if m != nil {
		return m.VibrationY
	}
	return nil
}

func (m *ProcessRequest) GetVibrationZ() []float64 {
	if m != nil {
		return m.VibrationZ
	}
	return nil
}

type ProcessResponseSeries struct {
	UnixTime             []float64 `protobuf:"fixed64,1,rep,packed,name=unix_time,json=unixTime,proto3" json:"unix_time,omitempty"`
	RmsVibrationX        []float64 `protobuf:"fixed64,2,rep,packed,name=rms_vibration_x,json=rmsVibrationX,proto3" json:"rms_vibration_x,omitempty"`
	RmsVibrationY        []float64 `protobuf:"fixed64,3,rep,packed,name=rms_vibration_y,json=rmsVibrationY,proto3" json:"rms_vibration_y,omitempty"`
	RmsVibrationZ        []float64 `protobuf:"fixed64,4,rep,packed,name=rms_vibration_z,json=rmsVibrationZ,proto3" json:"rms_vibration_z,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ProcessResponseSeries) Reset()         { *m = ProcessResponseSeries{} }
func (m *ProcessResponseSeries) String() string { return proto.CompactTextString(m) }
func (*ProcessResponseSeries) ProtoMessage()    {}
func (*ProcessResponseSeries) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c22b8d8c4cd16b, []int{1}
}

func (m *ProcessResponseSeries) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessResponseSeries.Unmarshal(m, b)
}
func (m *ProcessResponseSeries) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessResponseSeries.Marshal(b, m, deterministic)
}
func (m *ProcessResponseSeries) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessResponseSeries.Merge(m, src)
}
func (m *ProcessResponseSeries) XXX_Size() int {
	return xxx_messageInfo_ProcessResponseSeries.Size(m)
}
func (m *ProcessResponseSeries) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessResponseSeries.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessResponseSeries proto.InternalMessageInfo

func (m *ProcessResponseSeries) GetUnixTime() []float64 {
	if m != nil {
		return m.UnixTime
	}
	return nil
}

func (m *ProcessResponseSeries) GetRmsVibrationX() []float64 {
	if m != nil {
		return m.RmsVibrationX
	}
	return nil
}

func (m *ProcessResponseSeries) GetRmsVibrationY() []float64 {
	if m != nil {
		return m.RmsVibrationY
	}
	return nil
}

func (m *ProcessResponseSeries) GetRmsVibrationZ() []float64 {
	if m != nil {
		return m.RmsVibrationZ
	}
	return nil
}

type ProcessResponseBatch struct {
	UnixTimeStart        float64  `protobuf:"fixed64,1,opt,name=unix_time_start,json=unixTimeStart,proto3" json:"unix_time_start,omitempty"`
	UnixTimeEnd          float64  `protobuf:"fixed64,2,opt,name=unix_time_end,json=unixTimeEnd,proto3" json:"unix_time_end,omitempty"`
	RmsVibrationX        float64  `protobuf:"fixed64,3,opt,name=rms_vibration_x,json=rmsVibrationX,proto3" json:"rms_vibration_x,omitempty"`
	RmsVibrationY        float64  `protobuf:"fixed64,4,opt,name=rms_vibration_y,json=rmsVibrationY,proto3" json:"rms_vibration_y,omitempty"`
	RmsVibrationZ        float64  `protobuf:"fixed64,5,opt,name=rms_vibration_z,json=rmsVibrationZ,proto3" json:"rms_vibration_z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProcessResponseBatch) Reset()         { *m = ProcessResponseBatch{} }
func (m *ProcessResponseBatch) String() string { return proto.CompactTextString(m) }
func (*ProcessResponseBatch) ProtoMessage()    {}
func (*ProcessResponseBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c22b8d8c4cd16b, []int{2}
}

func (m *ProcessResponseBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProcessResponseBatch.Unmarshal(m, b)
}
func (m *ProcessResponseBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProcessResponseBatch.Marshal(b, m, deterministic)
}
func (m *ProcessResponseBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProcessResponseBatch.Merge(m, src)
}
func (m *ProcessResponseBatch) XXX_Size() int {
	return xxx_messageInfo_ProcessResponseBatch.Size(m)
}
func (m *ProcessResponseBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_ProcessResponseBatch.DiscardUnknown(m)
}

var xxx_messageInfo_ProcessResponseBatch proto.InternalMessageInfo

func (m *ProcessResponseBatch) GetUnixTimeStart() float64 {
	if m != nil {
		return m.UnixTimeStart
	}
	return 0
}

func (m *ProcessResponseBatch) GetUnixTimeEnd() float64 {
	if m != nil {
		return m.UnixTimeEnd
	}
	return 0
}

func (m *ProcessResponseBatch) GetRmsVibrationX() float64 {
	if m != nil {
		return m.RmsVibrationX
	}
	return 0
}

func (m *ProcessResponseBatch) GetRmsVibrationY() float64 {
	if m != nil {
		return m.RmsVibrationY
	}
	return 0
}

func (m *ProcessResponseBatch) GetRmsVibrationZ() float64 {
	if m != nil {
		return m.RmsVibrationZ
	}
	return 0
}

func init() {
	proto.RegisterType((*ProcessRequest)(nil), "processVibrationServiceAPI.v1.ProcessRequest")
	proto.RegisterType((*ProcessResponseSeries)(nil), "processVibrationServiceAPI.v1.ProcessResponseSeries")
	proto.RegisterType((*ProcessResponseBatch)(nil), "processVibrationServiceAPI.v1.ProcessResponseBatch")
}

func init() {
	proto.RegisterFile("processVibrationService/proto/v1/process_vibration_service_api_v1.proto", fileDescriptor_32c22b8d8c4cd16b)
}

var fileDescriptor_32c22b8d8c4cd16b = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x49, 0xdb, 0xff, 0x47, 0xa7, 0x54, 0x31, 0x28, 0x06, 0x45, 0x2c, 0x59, 0x88, 0x1b,
	0x13, 0x6a, 0xdd, 0xb9, 0x6a, 0x45, 0xc4, 0x85, 0x50, 0x1a, 0x91, 0x36, 0x08, 0x61, 0x9a, 0x5e,
	0xe2, 0x40, 0x93, 0x89, 0x33, 0x93, 0xd8, 0xfa, 0x0e, 0x82, 0x0f, 0xe2, 0x13, 0xf9, 0x34, 0x92,
	0xa4, 0x69, 0x9a, 0xa6, 0xad, 0x76, 0x7b, 0xf3, 0x71, 0xce, 0xb9, 0x37, 0x67, 0xd0, 0x9d, 0xcf,
	0xa8, 0x0d, 0x9c, 0x3f, 0x91, 0x01, 0xc3, 0x82, 0x50, 0xcf, 0x00, 0x16, 0x12, 0x1b, 0x74, 0x9f,
	0x51, 0x41, 0xf5, 0xb0, 0xa1, 0x4f, 0x01, 0x2b, 0x4c, 0x09, 0x8b, 0x27, 0x88, 0x85, 0x7d, 0x62,
	0x85, 0x0d, 0x2d, 0x26, 0xe5, 0x93, 0x15, 0x42, 0xad, 0xce, 0xbd, 0x16, 0x36, 0xd4, 0x4f, 0x09,
	0xed, 0x74, 0x12, 0xa2, 0x0b, 0xaf, 0x01, 0x70, 0x21, 0x1f, 0xa3, 0xed, 0xc0, 0x23, 0x63, 0x4b,
	0x10, 0x17, 0x14, 0xa9, 0x5e, 0x3e, 0x97, 0xba, 0x5b, 0xd1, 0xe0, 0x91, 0xb8, 0x20, 0x9f, 0xa2,
	0x6a, 0x66, 0x38, 0x56, 0x4a, 0xf1, 0x67, 0x34, 0x1b, 0xf5, 0xf2, 0xc0, 0x44, 0x29, 0x2f, 0x00,
	0xfd, 0x3c, 0xf0, 0xae, 0x54, 0x16, 0x00, 0x53, 0xfd, 0x92, 0xd0, 0xc1, 0x2c, 0x12, 0xf7, 0xa9,
	0xc7, 0xc1, 0x00, 0x46, 0x80, 0xaf, 0x4f, 0x76, 0x86, 0x76, 0x99, 0x3b, 0x7f, 0x8e, 0x34, 0x5d,
	0x8d, 0xb9, 0xd9, 0xf6, 0xbd, 0x22, 0x97, 0x86, 0xcc, 0x71, 0xfd, 0x22, 0x97, 0x66, 0xcd, 0x71,
	0xa6, 0xfa, 0x2d, 0xa1, 0xfd, 0x85, 0xb8, 0x6d, 0x2c, 0xec, 0x97, 0x48, 0x60, 0x96, 0xd6, 0xe2,
	0x02, 0x33, 0xa1, 0x48, 0x75, 0x29, 0x12, 0x48, 0x33, 0x1b, 0xd1, 0x50, 0x56, 0x51, 0x2d, 0xe3,
	0xc0, 0x1b, 0x2a, 0xa5, 0x98, 0xaa, 0xa6, 0xd4, 0xad, 0x37, 0x5c, 0xb6, 0x5c, 0x39, 0xd1, 0xfa,
	0x75, 0xb9, 0x4a, 0x91, 0x5b, 0xba, 0xdc, 0xbf, 0x22, 0x67, 0x5e, 0x7e, 0x94, 0xd0, 0x61, 0x67,
	0x79, 0x81, 0xe4, 0x09, 0x92, 0x6f, 0xf0, 0xc8, 0x0e, 0x46, 0x58, 0x40, 0xf7, 0xc1, 0x98, 0xfe,
	0xa3, 0x0b, 0x6d, 0x6d, 0xe1, 0xb4, 0x7c, 0xd9, 0x8e, 0xae, 0xfe, 0x8a, 0xe7, 0x8a, 0xf0, 0x86,
	0xf6, 0xe6, 0xad, 0x93, 0x7b, 0x6f, 0xe8, 0xdc, 0xdc, 0xcc, 0x39, 0xf6, 0x68, 0x3f, 0x9b, 0x26,
	0xa3, 0x81, 0x80, 0x96, 0x87, 0x47, 0x13, 0x4e, 0x78, 0xcb, 0x71, 0x18, 0x38, 0x58, 0x50, 0x96,
	0x3d, 0x4c, 0x07, 0x3c, 0x60, 0x58, 0xc0, 0x50, 0x5f, 0x61, 0x70, 0xbd, 0x42, 0x62, 0xf0, 0x3f,
	0xd6, 0x68, 0xfe, 0x04, 0x00, 0x00, 0xff, 0xff, 0x73, 0x89, 0x2f, 0x97, 0xfd, 0x03, 0x00, 0x00,
}
