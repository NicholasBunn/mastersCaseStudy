// Code generated by protoc-gen-go. DO NOT EDIT.
// source: oceanWeatherService/proto/v1/ocean_weather_service_api_v1.proto

package oceanWeatherService

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ArchiveService int32

const (
	ArchiveService_UNKNOWN      ArchiveService = 0
	ArchiveService_STORMGLASS   ArchiveService = 1
	ArchiveService_ERA5         ArchiveService = 2
	ArchiveService_OBSERVATIONS ArchiveService = 3
)

var ArchiveService_name = map[int32]string{
	0: "UNKNOWN",
	1: "STORMGLASS",
	2: "ERA5",
	3: "OBSERVATIONS",
}

var ArchiveService_value = map[string]int32{
	"UNKNOWN":      0,
	"STORMGLASS":   1,
	"ERA5":         2,
	"OBSERVATIONS": 3,
}

func (x ArchiveService) String() string {
	return proto.EnumName(ArchiveService_name, int32(x))
}

func (ArchiveService) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c5e6f7de30ab5156, []int{0}
}

type OceanWeatherPredictionRequest struct {
	Latitude             []float32 `protobuf:"fixed32,1,rep,packed,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            []float32 `protobuf:"fixed32,2,rep,packed,name=longitude,proto3" json:"longitude,omitempty"`
	Timestamp            []float32 `protobuf:"fixed32,3,rep,packed,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OceanWeatherPredictionRequest) Reset()         { *m = OceanWeatherPredictionRequest{} }
func (m *OceanWeatherPredictionRequest) String() string { return proto.CompactTextString(m) }
func (*OceanWeatherPredictionRequest) ProtoMessage()    {}
func (*OceanWeatherPredictionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5e6f7de30ab5156, []int{0}
}

func (m *OceanWeatherPredictionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OceanWeatherPredictionRequest.Unmarshal(m, b)
}
func (m *OceanWeatherPredictionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OceanWeatherPredictionRequest.Marshal(b, m, deterministic)
}
func (m *OceanWeatherPredictionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OceanWeatherPredictionRequest.Merge(m, src)
}
func (m *OceanWeatherPredictionRequest) XXX_Size() int {
	return xxx_messageInfo_OceanWeatherPredictionRequest.Size(m)
}
func (m *OceanWeatherPredictionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OceanWeatherPredictionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OceanWeatherPredictionRequest proto.InternalMessageInfo

func (m *OceanWeatherPredictionRequest) GetLatitude() []float32 {
	if m != nil {
		return m.Latitude
	}
	return nil
}

func (m *OceanWeatherPredictionRequest) GetLongitude() []float32 {
	if m != nil {
		return m.Longitude
	}
	return nil
}

func (m *OceanWeatherPredictionRequest) GetTimestamp() []float32 {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type OceanWeatherHistoryRequest struct {
	Latitude             []float32      `protobuf:"fixed32,1,rep,packed,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            []float32      `protobuf:"fixed32,2,rep,packed,name=longitude,proto3" json:"longitude,omitempty"`
	Timestamp            []float32      `protobuf:"fixed32,3,rep,packed,name=timestamp,proto3" json:"timestamp,omitempty"`
	ArchiveService       ArchiveService `protobuf:"varint,4,opt,name=archive_service,json=archiveService,proto3,enum=oceanWeatherServiceAPI.v1.ArchiveService" json:"archive_service,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OceanWeatherHistoryRequest) Reset()         { *m = OceanWeatherHistoryRequest{} }
func (m *OceanWeatherHistoryRequest) String() string { return proto.CompactTextString(m) }
func (*OceanWeatherHistoryRequest) ProtoMessage()    {}
func (*OceanWeatherHistoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5e6f7de30ab5156, []int{1}
}

func (m *OceanWeatherHistoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OceanWeatherHistoryRequest.Unmarshal(m, b)
}
func (m *OceanWeatherHistoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OceanWeatherHistoryRequest.Marshal(b, m, deterministic)
}
func (m *OceanWeatherHistoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OceanWeatherHistoryRequest.Merge(m, src)
}
func (m *OceanWeatherHistoryRequest) XXX_Size() int {
	return xxx_messageInfo_OceanWeatherHistoryRequest.Size(m)
}
func (m *OceanWeatherHistoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OceanWeatherHistoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OceanWeatherHistoryRequest proto.InternalMessageInfo

func (m *OceanWeatherHistoryRequest) GetLatitude() []float32 {
	if m != nil {
		return m.Latitude
	}
	return nil
}

func (m *OceanWeatherHistoryRequest) GetLongitude() []float32 {
	if m != nil {
		return m.Longitude
	}
	return nil
}

func (m *OceanWeatherHistoryRequest) GetTimestamp() []float32 {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *OceanWeatherHistoryRequest) GetArchiveService() ArchiveService {
	if m != nil {
		return m.ArchiveService
	}
	return ArchiveService_UNKNOWN
}

type OceanWeatherInformationResponse struct {
	WindDirection        []float32 `protobuf:"fixed32,1,rep,packed,name=wind_direction,json=windDirection,proto3" json:"wind_direction,omitempty"`
	WindSpeed            []float32 `protobuf:"fixed32,2,rep,packed,name=wind_speed,json=windSpeed,proto3" json:"wind_speed,omitempty"`
	BeaufortNumber       []uint32  `protobuf:"varint,3,rep,packed,name=beaufort_number,json=beaufortNumber,proto3" json:"beaufort_number,omitempty"`
	SwellDirection       []float32 `protobuf:"fixed32,4,rep,packed,name=swell_direction,json=swellDirection,proto3" json:"swell_direction,omitempty"`
	WaveLength           []float32 `protobuf:"fixed32,5,rep,packed,name=wave_length,json=waveLength,proto3" json:"wave_length,omitempty"`
	SwellHeight          []float32 `protobuf:"fixed32,6,rep,packed,name=swell_height,json=swellHeight,proto3" json:"swell_height,omitempty"`
	SwellFrequency       []float32 `protobuf:"fixed32,7,rep,packed,name=swell_frequency,json=swellFrequency,proto3" json:"swell_frequency,omitempty"`
	SwellPeriod          []float32 `protobuf:"fixed32,8,rep,packed,name=swell_period,json=swellPeriod,proto3" json:"swell_period,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *OceanWeatherInformationResponse) Reset()         { *m = OceanWeatherInformationResponse{} }
func (m *OceanWeatherInformationResponse) String() string { return proto.CompactTextString(m) }
func (*OceanWeatherInformationResponse) ProtoMessage()    {}
func (*OceanWeatherInformationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c5e6f7de30ab5156, []int{2}
}

func (m *OceanWeatherInformationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OceanWeatherInformationResponse.Unmarshal(m, b)
}
func (m *OceanWeatherInformationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OceanWeatherInformationResponse.Marshal(b, m, deterministic)
}
func (m *OceanWeatherInformationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OceanWeatherInformationResponse.Merge(m, src)
}
func (m *OceanWeatherInformationResponse) XXX_Size() int {
	return xxx_messageInfo_OceanWeatherInformationResponse.Size(m)
}
func (m *OceanWeatherInformationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OceanWeatherInformationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OceanWeatherInformationResponse proto.InternalMessageInfo

func (m *OceanWeatherInformationResponse) GetWindDirection() []float32 {
	if m != nil {
		return m.WindDirection
	}
	return nil
}

func (m *OceanWeatherInformationResponse) GetWindSpeed() []float32 {
	if m != nil {
		return m.WindSpeed
	}
	return nil
}

func (m *OceanWeatherInformationResponse) GetBeaufortNumber() []uint32 {
	if m != nil {
		return m.BeaufortNumber
	}
	return nil
}

func (m *OceanWeatherInformationResponse) GetSwellDirection() []float32 {
	if m != nil {
		return m.SwellDirection
	}
	return nil
}

func (m *OceanWeatherInformationResponse) GetWaveLength() []float32 {
	if m != nil {
		return m.WaveLength
	}
	return nil
}

func (m *OceanWeatherInformationResponse) GetSwellHeight() []float32 {
	if m != nil {
		return m.SwellHeight
	}
	return nil
}

func (m *OceanWeatherInformationResponse) GetSwellFrequency() []float32 {
	if m != nil {
		return m.SwellFrequency
	}
	return nil
}

func (m *OceanWeatherInformationResponse) GetSwellPeriod() []float32 {
	if m != nil {
		return m.SwellPeriod
	}
	return nil
}

func init() {
	proto.RegisterEnum("oceanWeatherServiceAPI.v1.ArchiveService", ArchiveService_name, ArchiveService_value)
	proto.RegisterType((*OceanWeatherPredictionRequest)(nil), "oceanWeatherServiceAPI.v1.OceanWeatherPredictionRequest")
	proto.RegisterType((*OceanWeatherHistoryRequest)(nil), "oceanWeatherServiceAPI.v1.OceanWeatherHistoryRequest")
	proto.RegisterType((*OceanWeatherInformationResponse)(nil), "oceanWeatherServiceAPI.v1.OceanWeatherInformationResponse")
}

func init() {
	proto.RegisterFile("oceanWeatherService/proto/v1/ocean_weather_service_api_v1.proto", fileDescriptor_c5e6f7de30ab5156)
}

var fileDescriptor_c5e6f7de30ab5156 = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x94, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x86, 0x49, 0x57, 0xb6, 0x72, 0xba, 0x65, 0x95, 0x91, 0x50, 0xa8, 0x98, 0x36, 0x2a, 0x21,
	0x06, 0x17, 0xad, 0x3a, 0x34, 0x09, 0xc1, 0x05, 0xca, 0xc4, 0x60, 0x15, 0xa3, 0xa9, 0x92, 0xc2,
	0x24, 0x6e, 0x22, 0xb7, 0x39, 0x4d, 0x2d, 0xa5, 0x76, 0x70, 0xdc, 0x54, 0x7d, 0x03, 0xae, 0x78,
	0x17, 0xde, 0x02, 0xde, 0x0a, 0xc5, 0x69, 0xd7, 0x54, 0x94, 0x69, 0x12, 0xe2, 0x32, 0xdf, 0x7f,
	0xfc, 0xff, 0x3e, 0xc7, 0x76, 0xe0, 0x8d, 0x18, 0x22, 0xe5, 0x57, 0x48, 0xd5, 0x18, 0xa5, 0x87,
	0x32, 0x65, 0x43, 0x6c, 0xc5, 0x52, 0x28, 0xd1, 0x4a, 0xdb, 0x2d, 0x2d, 0xfa, 0xb3, 0x5c, 0xf5,
	0x93, 0x5c, 0xf6, 0x69, 0xcc, 0xfc, 0xb4, 0xdd, 0xd4, 0x55, 0xe4, 0xe1, 0x06, 0x03, 0xbb, 0xd7,
	0x69, 0xa6, 0xed, 0xc6, 0x0c, 0x0e, 0x9c, 0x82, 0xd8, 0x93, 0x18, 0xb0, 0xa1, 0x62, 0x82, 0xbb,
	0xf8, 0x75, 0x8a, 0x89, 0x22, 0x75, 0xa8, 0x44, 0x54, 0x31, 0x35, 0x0d, 0xd0, 0x32, 0x8e, 0xb6,
	0x8e, 0x4b, 0xee, 0xf5, 0x37, 0x79, 0x04, 0xf7, 0x22, 0xc1, 0xc3, 0x5c, 0x2c, 0x69, 0x71, 0x05,
	0x32, 0x55, 0xb1, 0x09, 0x26, 0x8a, 0x4e, 0x62, 0x6b, 0x2b, 0x57, 0xaf, 0x41, 0xe3, 0xa7, 0x01,
	0xf5, 0x62, 0xf2, 0x05, 0x4b, 0x94, 0x90, 0xf3, 0xff, 0x1c, 0x4b, 0x5c, 0xd8, 0xa7, 0x72, 0x38,
	0x66, 0x29, 0x2e, 0x47, 0x65, 0x95, 0x8f, 0x8c, 0x63, 0xf3, 0xe4, 0x59, 0xf3, 0xaf, 0x43, 0x6a,
	0xda, 0xf9, 0x8a, 0x05, 0x74, 0x4d, 0xba, 0xf6, 0xdd, 0xf8, 0x55, 0x82, 0xc3, 0x62, 0x2b, 0x1d,
	0x3e, 0x12, 0x72, 0x42, 0xf3, 0x29, 0x26, 0xb1, 0xe0, 0x09, 0x92, 0x27, 0x60, 0xce, 0x18, 0x0f,
	0xfc, 0x80, 0x49, 0xd4, 0xf3, 0x5d, 0x74, 0xb5, 0x97, 0xd1, 0xb7, 0x4b, 0x48, 0x0e, 0x00, 0x74,
	0x59, 0x12, 0x23, 0x06, 0xcb, 0xde, 0x32, 0xe2, 0x65, 0x80, 0x3c, 0x85, 0xfd, 0x01, 0xd2, 0xe9,
	0x48, 0x48, 0xe5, 0xf3, 0xe9, 0x64, 0x80, 0x52, 0x77, 0xb8, 0xe7, 0x9a, 0x4b, 0xdc, 0xd5, 0x34,
	0x2b, 0x4c, 0x66, 0x18, 0x45, 0x85, 0xbc, 0xb2, 0x36, 0x33, 0x35, 0x5e, 0x05, 0x1e, 0x42, 0x75,
	0x46, 0x53, 0xf4, 0x23, 0xe4, 0xa1, 0x1a, 0x5b, 0x77, 0x75, 0x11, 0x64, 0xe8, 0x52, 0x13, 0xf2,
	0x18, 0x76, 0x73, 0xa7, 0x31, 0xb2, 0x70, 0xac, 0xac, 0x6d, 0x5d, 0x51, 0xd5, 0xec, 0x42, 0xa3,
	0x55, 0xd8, 0x48, 0x66, 0xa7, 0xc7, 0x87, 0x73, 0x6b, 0xa7, 0x10, 0xf6, 0x6e, 0x49, 0x57, 0x5e,
	0x31, 0x4a, 0x26, 0x02, 0xab, 0x52, 0xf0, 0xea, 0x69, 0xf4, 0xbc, 0x03, 0xe6, 0xfa, 0xb4, 0x49,
	0x15, 0x76, 0x3e, 0x75, 0x3f, 0x74, 0x9d, 0xab, 0x6e, 0xed, 0x0e, 0x31, 0x01, 0xbc, 0xbe, 0xe3,
	0x7e, 0x7c, 0x7f, 0x69, 0x7b, 0x5e, 0xcd, 0x20, 0x15, 0x28, 0x9f, 0xbb, 0xf6, 0x69, 0xad, 0x44,
	0x6a, 0xb0, 0xeb, 0x9c, 0x79, 0xe7, 0xee, 0x67, 0xbb, 0xdf, 0x71, 0xba, 0x5e, 0x6d, 0xeb, 0xe4,
	0x47, 0x09, 0xee, 0x3b, 0x7f, 0x9e, 0x29, 0xf9, 0x6e, 0xc0, 0x83, 0xcd, 0x77, 0x9e, 0xbc, 0xbc,
	0xe1, 0x12, 0xdc, 0xf8, 0x4c, 0xea, 0xaf, 0x6e, 0xb9, 0x72, 0xd3, 0xdd, 0xf8, 0x66, 0xac, 0x6f,
	0x74, 0xf1, 0x14, 0xc8, 0xe9, 0x2d, 0x3d, 0xd7, 0x9f, 0xce, 0xbf, 0x6c, 0xe5, 0xac, 0xff, 0xc5,
	0x95, 0x62, 0xaa, 0xd0, 0xe6, 0x34, 0x9a, 0x27, 0x2c, 0xb1, 0xc3, 0x50, 0x62, 0x48, 0x95, 0x90,
	0xab, 0x1f, 0x4e, 0x88, 0x1c, 0x25, 0x55, 0x18, 0xb4, 0x36, 0xe4, 0xbc, 0xde, 0xc0, 0x06, 0xdb,
	0x7a, 0xed, 0x8b, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x30, 0x69, 0x58, 0xc9, 0x04, 0x00,
	0x00,
}
