syntax = "proto3";

package routeAnalysisAggregatorAPI.v1;

option go_package = "routeAnalysisAggregator/v1;routeAnalysisAggregator";

message AnalysisRequest {
    repeated double unix_time = 1;
    repeated float latitude = 2;
    repeated float longitude = 3;
    repeated float heading = 4;
    repeated float prop_pitch = 5;
    repeated float motor_speed = 6;
    repeated float SOG = 7; 
}

message AnalysisResponse {
    repeated double unix_time = 1;
    float average_power = 2;
    float total_cost = 3;
    double average_rms_x = 4;
    double average_rms_y = 5;
    double average_rms_z = 6;
    HabitibilityRating comfort_level = 7;
}

// 'Analysis Service' offers BLABLA service call that aggregates information to provide summaries of requested routes.
service AnalysisService {
    // The 'Analyse Route' call provides foresight for tactical decision-making by providing a summary of the provided route.
    rpc AnalyseRoute(AnalysisRequest) returns (AnalysisResponse);
}

enum HabitibilityRating {
    UNKNOWN_RATING = 0;
    NOT_UNCOMFORTABLE = 1;
    SLIGHTLY_UNCOMFORTABLE = 2;
    FAIRLY_UNCOMFORTABLE = 3;
    UNCOMFORTABLE = 4;
    VERY_UNCOMFORTABLE = 5;
    EXTREMELY_UNCOMFORTABLE = 6;
}