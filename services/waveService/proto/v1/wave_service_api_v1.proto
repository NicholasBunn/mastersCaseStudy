syntax = "proto3";

package waveServiceAPI.v1;

// option go_package = "service/waveService/proto/v1";

message WaveInformationRequest {
    repeated float latitude = 1;
    repeated float longitude = 2;
    repeated float timestamp = 3;
}

message WaveInformationResponse {
    repeated float wind_direction = 1;
    repeated float wind_speed = 2;
    repeated uint32 beaufort_number = 3;
    repeated float swell_direction = 4;
    repeated float swell_length = 5;
    repeated float swell_height = 6;
    repeated float swell_frequency = 7;
    repeated float swell_period = 8;
}

// 'Wave Service' offers two service calls that provide information about wave conditions for use in route planning.
service WaveService {
    // The 'Wave Estimate' call provides foresight for tactical decision-making by providing future wave conditions along a requested route
    rpc WaveEstimate(WaveInformationRequest) returns (WaveInformationResponse);
    // The 'Wave History' call provides hindsight for stategic decision-making by providing historical wave conditions that the ship would have encountered along a requested route
    rpc WaveHistory(WaveInformationRequest) returns (WaveInformationResponse);
}