// source: route_analysis_aggregator_api_v1.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest', null, global);
goog.exportSymbol('proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse', null, global);
goog.exportSymbol('proto.routeAnalysisAggregatorAPI.v1.HabitibilityRating', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.repeatedFields_, null);
};
goog.inherits(proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.displayName = 'proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.repeatedFields_, null);
};
goog.inherits(proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.displayName = 'proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.repeatedFields_ = [1,2,3,4,5,6,7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    unixTimeList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    latitudeList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 2)) == null ? undefined : f,
    longitudeList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 3)) == null ? undefined : f,
    headingList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 4)) == null ? undefined : f,
    propPitchList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 5)) == null ? undefined : f,
    motorSpeedList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 6)) == null ? undefined : f,
    sogList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest;
  return proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnixTime(values[i]);
      }
      break;
    case 2:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLatitude(values[i]);
      }
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addLongitude(values[i]);
      }
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addHeading(values[i]);
      }
      break;
    case 5:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addPropPitch(values[i]);
      }
      break;
    case 6:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addMotorSpeed(values[i]);
      }
      break;
    case 7:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedFloat() : [reader.readFloat()]);
      for (var i = 0; i < values.length; i++) {
        msg.addSog(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnixTimeList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
  f = message.getLatitudeList();
  if (f.length > 0) {
    writer.writePackedFloat(
      2,
      f
    );
  }
  f = message.getLongitudeList();
  if (f.length > 0) {
    writer.writePackedFloat(
      3,
      f
    );
  }
  f = message.getHeadingList();
  if (f.length > 0) {
    writer.writePackedFloat(
      4,
      f
    );
  }
  f = message.getPropPitchList();
  if (f.length > 0) {
    writer.writePackedFloat(
      5,
      f
    );
  }
  f = message.getMotorSpeedList();
  if (f.length > 0) {
    writer.writePackedFloat(
      6,
      f
    );
  }
  f = message.getSogList();
  if (f.length > 0) {
    writer.writePackedFloat(
      7,
      f
    );
  }
};


/**
 * repeated double unix_time = 1;
 * @return {!Array<number>}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.getUnixTimeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.setUnixTimeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.addUnixTime = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.clearUnixTimeList = function() {
  return this.setUnixTimeList([]);
};


/**
 * repeated float latitude = 2;
 * @return {!Array<number>}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.getLatitudeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.setLatitudeList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.addLatitude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.clearLatitudeList = function() {
  return this.setLatitudeList([]);
};


/**
 * repeated float longitude = 3;
 * @return {!Array<number>}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.getLongitudeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.setLongitudeList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.addLongitude = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.clearLongitudeList = function() {
  return this.setLongitudeList([]);
};


/**
 * repeated float heading = 4;
 * @return {!Array<number>}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.getHeadingList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.setHeadingList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.addHeading = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.clearHeadingList = function() {
  return this.setHeadingList([]);
};


/**
 * repeated float prop_pitch = 5;
 * @return {!Array<number>}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.getPropPitchList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 5));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.setPropPitchList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.addPropPitch = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.clearPropPitchList = function() {
  return this.setPropPitchList([]);
};


/**
 * repeated float motor_speed = 6;
 * @return {!Array<number>}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.getMotorSpeedList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.setMotorSpeedList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.addMotorSpeed = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.clearMotorSpeedList = function() {
  return this.setMotorSpeedList([]);
};


/**
 * repeated float SOG = 7;
 * @return {!Array<number>}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.getSogList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.setSogList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.addSog = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisRequest.prototype.clearSogList = function() {
  return this.setSogList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    unixTimeList: (f = jspb.Message.getRepeatedFloatingPointField(msg, 1)) == null ? undefined : f,
    averagePower: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    totalCost: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    averageRmsX: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    averageRmsY: jspb.Message.getFloatingPointFieldWithDefault(msg, 5, 0.0),
    averageRmsZ: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    comfortLevel: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse;
  return proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedDouble() : [reader.readDouble()]);
      for (var i = 0; i < values.length; i++) {
        msg.addUnixTime(values[i]);
      }
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setAveragePower(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalCost(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageRmsX(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageRmsY(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAverageRmsZ(value);
      break;
    case 7:
      var value = /** @type {!proto.routeAnalysisAggregatorAPI.v1.HabitibilityRating} */ (reader.readEnum());
      msg.setComfortLevel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUnixTimeList();
  if (f.length > 0) {
    writer.writePackedDouble(
      1,
      f
    );
  }
  f = message.getAveragePower();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getTotalCost();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getAverageRmsX();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getAverageRmsY();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getAverageRmsZ();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getComfortLevel();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
};


/**
 * repeated double unix_time = 1;
 * @return {!Array<number>}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.getUnixTimeList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.setUnixTimeList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.addUnixTime = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.clearUnixTimeList = function() {
  return this.setUnixTimeList([]);
};


/**
 * optional float average_power = 2;
 * @return {number}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.getAveragePower = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.setAveragePower = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float total_cost = 3;
 * @return {number}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.getTotalCost = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.setTotalCost = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double average_rms_x = 4;
 * @return {number}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.getAverageRmsX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.setAverageRmsX = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double average_rms_y = 5;
 * @return {number}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.getAverageRmsY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.setAverageRmsY = function(value) {
  return jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double average_rms_z = 6;
 * @return {number}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.getAverageRmsZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.setAverageRmsZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional HabitibilityRating comfort_level = 7;
 * @return {!proto.routeAnalysisAggregatorAPI.v1.HabitibilityRating}
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.getComfortLevel = function() {
  return /** @type {!proto.routeAnalysisAggregatorAPI.v1.HabitibilityRating} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.routeAnalysisAggregatorAPI.v1.HabitibilityRating} value
 * @return {!proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse} returns this
 */
proto.routeAnalysisAggregatorAPI.v1.AnalysisResponse.prototype.setComfortLevel = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * @enum {number}
 */
proto.routeAnalysisAggregatorAPI.v1.HabitibilityRating = {
  UNKNOWN_RATING: 0,
  NOT_UNCOMFORTABLE: 1,
  SLIGHTLY_UNCOMFORTABLE: 2,
  FAIRLY_UNCOMFORTABLE: 3,
  UNCOMFORTABLE: 4,
  VERY_UNCOMFORTABLE: 5,
  EXTREMELY_UNCOMFORTABLE: 6
};

goog.object.extend(exports, proto.routeAnalysisAggregatorAPI.v1);
