// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vesselMotionAggregator/proto/v1/vessel_motion_aggregator_api_v1.proto

package vesselMotionAggregator

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PTEstimateRequest struct {
	UnixTime             []float64 `protobuf:"fixed64,1,rep,packed,name=unix_time,json=unixTime,proto3" json:"unix_time,omitempty"`
	Latitude             []float32 `protobuf:"fixed32,2,rep,packed,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            []float32 `protobuf:"fixed32,3,rep,packed,name=longitude,proto3" json:"longitude,omitempty"`
	Heading              []float32 `protobuf:"fixed32,4,rep,packed,name=heading,proto3" json:"heading,omitempty"`
	PropPitch            []float32 `protobuf:"fixed32,5,rep,packed,name=prop_pitch,json=propPitch,proto3" json:"prop_pitch,omitempty"`
	MotorSpeed           []float32 `protobuf:"fixed32,6,rep,packed,name=motor_speed,json=motorSpeed,proto3" json:"motor_speed,omitempty"`
	SOG                  []float32 `protobuf:"fixed32,7,rep,packed,name=SOG,proto3" json:"SOG,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PTEstimateRequest) Reset()         { *m = PTEstimateRequest{} }
func (m *PTEstimateRequest) String() string { return proto.CompactTextString(m) }
func (*PTEstimateRequest) ProtoMessage()    {}
func (*PTEstimateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_578fcf2461e7b08c, []int{0}
}

func (m *PTEstimateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PTEstimateRequest.Unmarshal(m, b)
}
func (m *PTEstimateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PTEstimateRequest.Marshal(b, m, deterministic)
}
func (m *PTEstimateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PTEstimateRequest.Merge(m, src)
}
func (m *PTEstimateRequest) XXX_Size() int {
	return xxx_messageInfo_PTEstimateRequest.Size(m)
}
func (m *PTEstimateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PTEstimateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PTEstimateRequest proto.InternalMessageInfo

func (m *PTEstimateRequest) GetUnixTime() []float64 {
	if m != nil {
		return m.UnixTime
	}
	return nil
}

func (m *PTEstimateRequest) GetLatitude() []float32 {
	if m != nil {
		return m.Latitude
	}
	return nil
}

func (m *PTEstimateRequest) GetLongitude() []float32 {
	if m != nil {
		return m.Longitude
	}
	return nil
}

func (m *PTEstimateRequest) GetHeading() []float32 {
	if m != nil {
		return m.Heading
	}
	return nil
}

func (m *PTEstimateRequest) GetPropPitch() []float32 {
	if m != nil {
		return m.PropPitch
	}
	return nil
}

func (m *PTEstimateRequest) GetMotorSpeed() []float32 {
	if m != nil {
		return m.MotorSpeed
	}
	return nil
}

func (m *PTEstimateRequest) GetSOG() []float32 {
	if m != nil {
		return m.SOG
	}
	return nil
}

type PTEstimateResponse struct {
	UnixTime              []float64 `protobuf:"fixed64,1,rep,packed,name=unix_time,json=unixTime,proto3" json:"unix_time,omitempty"`
	AccelerationEstimateX []float64 `protobuf:"fixed64,2,rep,packed,name=acceleration_estimate_x,json=accelerationEstimateX,proto3" json:"acceleration_estimate_x,omitempty"`
	AccelerationEstimateY []float64 `protobuf:"fixed64,3,rep,packed,name=acceleration_estimate_y,json=accelerationEstimateY,proto3" json:"acceleration_estimate_y,omitempty"`
	AccelerationEstimateZ []float64 `protobuf:"fixed64,4,rep,packed,name=acceleration_estimate_z,json=accelerationEstimateZ,proto3" json:"acceleration_estimate_z,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}  `json:"-"`
	XXX_unrecognized      []byte    `json:"-"`
	XXX_sizecache         int32     `json:"-"`
}

func (m *PTEstimateResponse) Reset()         { *m = PTEstimateResponse{} }
func (m *PTEstimateResponse) String() string { return proto.CompactTextString(m) }
func (*PTEstimateResponse) ProtoMessage()    {}
func (*PTEstimateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_578fcf2461e7b08c, []int{1}
}

func (m *PTEstimateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PTEstimateResponse.Unmarshal(m, b)
}
func (m *PTEstimateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PTEstimateResponse.Marshal(b, m, deterministic)
}
func (m *PTEstimateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PTEstimateResponse.Merge(m, src)
}
func (m *PTEstimateResponse) XXX_Size() int {
	return xxx_messageInfo_PTEstimateResponse.Size(m)
}
func (m *PTEstimateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PTEstimateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PTEstimateResponse proto.InternalMessageInfo

func (m *PTEstimateResponse) GetUnixTime() []float64 {
	if m != nil {
		return m.UnixTime
	}
	return nil
}

func (m *PTEstimateResponse) GetAccelerationEstimateX() []float64 {
	if m != nil {
		return m.AccelerationEstimateX
	}
	return nil
}

func (m *PTEstimateResponse) GetAccelerationEstimateY() []float64 {
	if m != nil {
		return m.AccelerationEstimateY
	}
	return nil
}

func (m *PTEstimateResponse) GetAccelerationEstimateZ() []float64 {
	if m != nil {
		return m.AccelerationEstimateZ
	}
	return nil
}

func init() {
	proto.RegisterType((*PTEstimateRequest)(nil), "vesselMotionAggregator.v1.PTEstimateRequest")
	proto.RegisterType((*PTEstimateResponse)(nil), "vesselMotionAggregator.v1.PTEstimateResponse")
}

func init() {
	proto.RegisterFile("vesselMotionAggregator/proto/v1/vessel_motion_aggregator_api_v1.proto", fileDescriptor_578fcf2461e7b08c)
}

var fileDescriptor_578fcf2461e7b08c = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4f, 0x4b, 0xeb, 0x40,
	0x14, 0xc5, 0x49, 0xf3, 0x5e, 0xff, 0xdc, 0x07, 0x0f, 0x1d, 0x10, 0x63, 0x55, 0x2c, 0x5d, 0x75,
	0xa1, 0x09, 0xb1, 0xe0, 0xc6, 0x95, 0x42, 0x71, 0x25, 0x96, 0xb4, 0x0b, 0xed, 0x26, 0x8c, 0xe9,
	0x25, 0x1d, 0x48, 0x32, 0xd3, 0x99, 0x69, 0xac, 0x6e, 0xfd, 0x8e, 0x82, 0xdf, 0x46, 0x32, 0xb1,
	0xb5, 0x60, 0x23, 0xee, 0xe6, 0x9e, 0xdf, 0x3d, 0x03, 0xe7, 0xcc, 0xc0, 0x20, 0x47, 0xa5, 0x30,
	0xb9, 0xe5, 0x9a, 0xf1, 0xec, 0x2a, 0x8e, 0x25, 0xc6, 0x54, 0x73, 0xe9, 0x09, 0xc9, 0x35, 0xf7,
	0x72, 0xdf, 0x2b, 0x79, 0x98, 0x9a, 0x85, 0x90, 0xae, 0x37, 0x42, 0x2a, 0x58, 0x98, 0xfb, 0xae,
	0x59, 0x24, 0x07, 0xdb, 0xaf, 0x71, 0x73, 0xbf, 0xfb, 0x66, 0xc1, 0xee, 0x70, 0x3c, 0x50, 0x9a,
	0xa5, 0x54, 0x63, 0x80, 0xf3, 0x05, 0x2a, 0x4d, 0x0e, 0xa1, 0xb5, 0xc8, 0xd8, 0x32, 0xd4, 0x2c,
	0x45, 0xc7, 0xea, 0xd8, 0x3d, 0x2b, 0x68, 0x16, 0xc2, 0x98, 0xa5, 0x48, 0xda, 0xd0, 0x4c, 0xa8,
	0x66, 0x7a, 0x31, 0x45, 0xa7, 0xd6, 0xb1, 0x7b, 0xb5, 0x60, 0x3d, 0x93, 0x23, 0x68, 0x25, 0x3c,
	0x8b, 0x4b, 0x68, 0x1b, 0xf8, 0x25, 0x10, 0x07, 0x1a, 0x33, 0xa4, 0x53, 0x96, 0xc5, 0xce, 0x1f,
	0xc3, 0x56, 0x23, 0x39, 0x06, 0x10, 0x92, 0x8b, 0x50, 0x30, 0x1d, 0xcd, 0x9c, 0xbf, 0xa5, 0xb1,
	0x50, 0x86, 0x85, 0x40, 0x4e, 0xe0, 0x5f, 0xca, 0x8b, 0x58, 0x4a, 0x20, 0x4e, 0x9d, 0xba, 0xe1,
	0x60, 0xa4, 0x51, 0xa1, 0x90, 0x1d, 0xb0, 0x47, 0x77, 0x37, 0x4e, 0xc3, 0x80, 0xe2, 0xd8, 0x7d,
	0xb7, 0x80, 0x6c, 0x06, 0x53, 0x82, 0x67, 0x0a, 0x7f, 0x4e, 0x76, 0x01, 0xfb, 0x34, 0x8a, 0x30,
	0x41, 0x49, 0x4d, 0x9f, 0xf8, 0xe9, 0x0e, 0x97, 0x26, 0xa8, 0x15, 0xec, 0x6d, 0xe2, 0xd5, 0xdd,
	0xf7, 0xd5, 0xbe, 0x67, 0xd3, 0x41, 0x85, 0xef, 0xa1, 0xda, 0xf7, 0x62, 0xfa, 0xa9, 0xf0, 0x4d,
	0xce, 0x5f, 0x2d, 0xf8, 0x3f, 0x50, 0x66, 0x18, 0xa1, 0xcc, 0x59, 0x84, 0x64, 0x0e, 0x64, 0xc5,
	0x87, 0xfc, 0x09, 0xe5, 0x58, 0x52, 0x96, 0x91, 0x53, 0xb7, 0xf2, 0xe5, 0xdd, 0x6f, 0xaf, 0xde,
	0x3e, 0xfb, 0xe5, 0x76, 0x59, 0xe5, 0x75, 0x7f, 0xe2, 0x57, 0x7c, 0xcf, 0xdc, 0xf7, 0x2e, 0xb7,
	0xa3, 0xc7, 0xba, 0xf9, 0x91, 0xfd, 0x8f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9d, 0x41, 0x80, 0x22,
	0xda, 0x02, 0x00, 0x00,
}
